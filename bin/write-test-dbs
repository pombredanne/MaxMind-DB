#!/usr/bin/env perl

use strict;
use warnings;
use autodie;

use Carp qw( croak );
use MaxMind::DB::Writer::Tree::InMemory;
use MaxMind::DB::Writer::Tree::File;
use Test::MaxMind::DB::Common::Util qw( standard_test_metadata );
use Net::Works::Network;

my @sizes = ( 24, 28, 32 );

{
    my @subnets
        = Net::Works::Network->range_as_subnets( '1.1.1.1', '1.1.1.32' );

    foreach my $record_size ( @sizes ) {
        write_tree( $record_size, \@subnets, { ip_version => 4 } );
    }
}

{

    foreach my $record_size ( @sizes ) {

        my @subnets = Net::Works::Network->range_as_subnets( '::1:ffff:ffff',
            '::2:0000:0059' );

        write_tree( $record_size, \@subnets, { ip_version => 6 } );

    }
}

sub write_tree {
    my $record_size = shift;
    my $subnets     = shift;
    my $metadata    = shift;

    my $tree = MaxMind::DB::Writer::Tree::InMemory->new(
        ip_version => $subnets->[0]->version() );

    for my $subnet ( @{$subnets} ) {
        $tree->insert_subnet( $subnet,
            { ip => $subnet->first()->as_string() } );
    }

    my $writer = MaxMind::DB::Writer::Tree::File->new(
        tree        => $tree,
        record_size => $record_size,
        standard_test_metadata(),
        %{$metadata},
        map_key_type_callback => sub {'utf8_string'},
    );

    my $filename = sprintf( 'test-data/ipv%i-%i.mmdb',
        $metadata->{ip_version}, $record_size );
    open my $fh, '>', $filename;

    $writer->write_tree( $fh );

    return ( $tree, $filename );
}

